API (Application Programming Interface)

Client: A client is any device that connects to the internet to get data from somewhere (that is it makes a "requests")
Server: A server accepts request(s) from a client and then responds to that request(s) with corresponding data requested

 REQUEST-RESPONSE CYCLE
    Request-response cycle requires internet connection.

 The request-response cycle works in a way such that the client makes a request to the server and the serve reply back by sending a resonse to the request sent

 Server Response Codes and meaning
    * 200 - Ok/Success
    * 400 - Bad request
    * 500 - Internal Server Error

 JSON stands for javascript object notation

Asynchronous Javascript
    Asynchronous js means the function runs/happens out of order. i.e the fetch(.then block) does not block other codes from running, they allow other codes to run before the responds from a request comes

LIST OF APIs FOR PRACTICE
    * https://www.boredapi.com/api/(endpoint)
    * https://jsonplaceholder.typicode.com/(endpoint)


URLs and REST
* HTTP request: it is a protocol that determine how hyper text(text) should be transferred over the internet
    HTTP comprise of the following:
    * Path(URL):
        This is where your desires resource livesand it comprise of a BAseULR and an Endpoint,
        e.g, BAseULR: https://jsonplaceholder.typicode.com
             Endpoint: /posts
    * Methods(GET,POST,PUT,DELETE):
        The methods tells the server the intention of the request.
        How to make a request with a method:
        note that default fetch without a method is a GET request
            fetch("https://apis.scrimba.com/jsonplaceholder/todos", {method: "POST"})
    * Body:
        This contain the data we want to send to the server
        - The POST or PUT method is used Headers
        - the data needs to be converted to JSON first using JSON.stringify() before sending
        example: 
            fetch("url", {
                method: "POST",
                body: JSON.stringify({
                    title: 'To do',
                    done: true
                })
            })
    * Headers:
        this is extra/meta info about hte request e.g auth,body info,client info

How to Clear Form fields
    use the reset method on the form like so:
        form.reset()
    or set the field value to an empty stringify
        e.g input.value =" " 

REST
    It is a standardized design pattern for clients and servers to communicate

Principles of REST
 1. Client and Server separation
 2. Statelessness: means the server does not maintain any memory of the request.
 3. Accessing Resources: resources can be accessed by navigating to the route/endpoint where the resource lives.
    e.g https://mikesbikes.com/api/bikes
    e.g https://mikesbikes.com/api/bikes/:id


Query strings: Allows us to filter the results that we get back
    e.g /bikes?type=mountain
        /bikes?type=mountain&brand=trek ====> query string having multiple data 


    Other Useful Notes About APIs
        Some Web APIs for practice:
        1. Twitter API
        2. Facebook API
        3. Weather API
        4. Reddit API
        5. GooglePlaces API
        6. Yelp API
        7. Yahoo weather API

    IFTTT (ifttt.com): If This Then That(IFTTT) is a way to connect APIs and comprise 309 services.
    NB: read more about IFTTT

    ProgrammableWeb (deprecated): programmableweb.com is an API directory that comprise of 15k+ APIs